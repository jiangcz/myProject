        static List<List<int>> ThreeSum(int[] nums)
        {
            Array.Sort(nums);
            List<List<int>> res = new List<List<int>>();
            for (int i = 0; i < nums.Length - 2; i++)
            {
                // if and continue is better solution without judging the duplication valid
                if (i != 0 && nums[i] == nums[i - 1])
                {
                    continue;
                }

                int start = i + 1;
                int end = nums.Length - 1;
                while (start < end)
                {
                    if (nums[i] + nums[start] + nums[end] == 0)
                    {
                        List<int> oneResult = new List<int> { nums[i], nums[start], nums[end] };
                        res.Add(oneResult);
                        start++;
                        end--;
                    }
                    else if (nums[i] + nums[start] + nums[end] < 0)
                    {
                        start++;
                    }
                    else 
                        end--;

                    // only duplicated if both start and end are equal with their neighbor
                    while (nums[start]!= i+1 && nums[start] == nums[start - 1])
                    {
                        start++;
                    }
                    while (nums[end] == nums[end - 1])
                    {
                        end--;
                    }

                }
            }

            return res;
        }
